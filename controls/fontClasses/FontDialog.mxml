<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml"
	width="225" height="200"
	layout="vertical"
	titleIcon="{Globals.g_assets.NewTextCloudIcon}"
	title="Fonts"
	horizontalScrollPolicy="off" verticalScrollPolicy="off"
	showCloseButton="true"

	styleName="CloudDialog"
	titleStyleName="CloudDialogTitle"
	paddingTop="0" paddingBottom="0"

	creationComplete="onCreationComplete()">


	<mx:Script>
	<![CDATA[
		import mx.controls.Label;

		import mx.events.ListEvent;
		import mx.collections.ArrayCollection;
		import mx.controls.Alert;
		import mx.managers.PopUpManager;

		import library.CloudLibraryBrowseEvent;
		import share.ShareController;


		// Static instance, singleton
		public static var fontDialog:FontDialog = new FontDialog();

		private var fontCreation:FontCreation = FontCreation.fontCreation;


		[Bindable]
		private var fontList:ArrayCollection = new ArrayCollection(); // Array of Fonts




		private function onCreationComplete():void
		{
			PopulateFontList();

			fontGrid.selectedIndex = 0;

			// Set the Right Click menu for this Dialog
   			var rightClickMenu:RightClickMenu = new RightClickMenu(this.title);
   			this.contextMenu = rightClickMenu.triCloudContextMenu;

			fontCreation.addEventListener('newFont', onNewFontCreated);
		}


		private function PopulateFontList():void
		{
			var font:CloudFont = new CloudFont(); // Font 00
			font.name = "ball";
			//font.fontStyle = FontStyle.ITALIC;
			fontList.addItem(font);

			font = new CloudFont();
			font.name = "baveuse3";
			fontList.addItem(font);

			font = new CloudFont();
			font.name = "killerboots";
			fontList.addItem(font);

			font = new CloudFont();
			font.name = "radio";
			font.fontStyle = FontStyle.BOLD;
			fontList.addItem(font);

			font = new CloudFont();
			font.name = "decadnce";
			fontList.addItem(font);

			font = new CloudFont();
			font.name = "rapjack";
			font.fontStyle = FontStyle.BOLD_ITALIC;
			fontList.addItem(font);
		}


		public function AddCloudFont(cloudFontXML:XML):void
		{
			// todo: bitmap and swf

			var newFont:CloudFont = new CloudFont();
			newFont.Load(cloudFontXML);

			fontList.addItem(newFont);
		}


		public function GetFontByName(fontName:String):CloudFont
		{
			var font:CloudFont = null;

			for each(font in fontList) // For each child of this cloud
			{
				if(font.name == fontName) // if same name
					return font;
			}
			return fontList[0]; // return first one if not found
		}



		private function onItemClickFontList(event:ListEvent):void
 		{
 			this.dispatchEvent(new FontEvent("fontChanged", event.target.selectedItem as CloudFont));
 		}

		private function onItemDoubleClickFontList(event:ListEvent):void
		{
			onItemClickFontList(event);
			this.dispatchEvent(new Event('close'));
		}




		private function onClickBrowseFont():void
		{
			// Open the Cloud Library to browse/search for Fonts
			TriCloud(this.parentApplication).dispatchEvent(
				new CloudLibraryBrowseEvent("browseCloudLibrary", '', "useCount", CloudType.ST_FONT));
		}

		private function onClickCreateFont():void
		{
			PopUpManager.addPopUp(fontCreation, this.parentApplication as DisplayObject, true);
			fontCreation.init();
			PopUpManager.centerPopUp(fontCreation); // Center Font Creation dialog
		}

		private function onNewFontCreated(fontEvent:FontEvent):void
		{
			// Add new font to list
			fontList.addItemAt(fontEvent.font, 0); // add on top

			// Select last item, the font just added
			//fontGrid.selectedIndex = fontList.length-1; // doesnt really click it

			fontGrid.validateNow();
		}


		private function onClickShareFont():void
		{
			var shareController:ShareController = CloudEngine.GetInstance().GetShareController();
			shareController.ShareCloud(fontGrid.selectedItem as CloudFont, CloudType.ST_FONT);

			// Close Font Dialog
			this.dispatchEvent(new Event("close"));
		}


		private function onClickCancel():void
		{
			this.dispatchEvent(new Event("close"));
		}

	]]>
    </mx:Script>


	<!-- FONT LIST -->
	<mx:List id="fontGrid" width="100%" height="100%"
		wordWrap="true"
		editable="false"
		allowDragSelection="false" dragEnabled="false" dropEnabled="false"
		rowCount="8" rowHeight="28" 
		columnCount="1" columnWidth="150"
		doubleClickEnabled="true"

		verticalAlign="middle"
		backgroundAlpha="0.5"
		dropShadowEnabled="false"

		dataProvider="{fontList}"
		itemRenderer="controls.fontClasses.FontItem"
		itemClick="onItemClickFontList(event)"
		itemDoubleClick="onItemDoubleClickFontList(event)"/>


	<mx:ControlBar width="100%"
		horizontalAlign="center"
		paddingBottom="3" paddingLeft="0" paddingRight="0" paddingTop="3">

		<mx:Button id="browseFontBtn" icon="{Globals.g_assets.TriCloudIcon16}" 
			toolTip="Browse/Search Fonts in the Cloud Library"
			click="onClickBrowseFont()" />

		<mx:Button id="createFontBtn" icon="{Globals.g_assets.AddTagIcon}" 
			toolTip="Import/Create Font"
			click="onClickCreateFont()" />

		<mx:Button id="shareFontBtn" icon="{Globals.g_assets.ShareIcon}"
			toolTip="Share this Font"
			click="onClickShareFont(); // Dislpay Button only if Font's remoteID == '0'"/>

	</mx:ControlBar>
	
</mx:TitleWindow>
